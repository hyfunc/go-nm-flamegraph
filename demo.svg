<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="134" onload="init(evt)" viewBox="0 0 1200 134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="117" > </text>
<g id="frames">
<g >
<title>sync (1,240 samples, 0.07%)</title><rect x="1040.0" y="69" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1043.03" y="79.5" ></text>
</g>
<g >
<title>runtime.gcTrigger (336 samples, 0.02%)</title><rect x="981.7" y="69" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="984.66" y="79.5" ></text>
</g>
<g >
<title>runtime.(*addrRanges) (2,032 samples, 0.11%)</title><rect x="905.5" y="69" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="908.49" y="79.5" ></text>
</g>
<g >
<title>runtime.(*profBuf) (3,696 samples, 0.20%)</title><rect x="943.3" y="69" width="2.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="946.25" y="79.5" ></text>
</g>
<g >
<title>runtime.traceEventWriter (192 samples, 0.01%)</title><rect x="994.4" y="69" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="997.42" y="79.5" ></text>
</g>
<g >
<title>runtime.call134217728 (320 samples, 0.02%)</title><rect x="971.9" y="69" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="974.86" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mSpanList) (576 samples, 0.03%)</title><rect x="918.3" y="69" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="921.32" y="79.5" ></text>
</g>
<g >
<title>runtime.(*Frames) (1,904 samples, 0.10%)</title><rect x="901.7" y="69" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="904.67" y="79.5" ></text>
</g>
<g >
<title>reflect.(*Kind) (208 samples, 0.01%)</title><rect x="217.2" y="69" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="220.18" y="79.5" ></text>
</g>
<g >
<title>go:itab.*os.unixDirent,io (792 samples, 0.04%)</title><rect x="125.0" y="69" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="128.00" y="79.5" ></text>
</g>
<g >
<title>atomic (352 samples, 0.02%)</title><rect x="1043.9" y="53" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1046.87" y="63.5" ></text>
</g>
<g >
<title>runtime.sweepone (272 samples, 0.01%)</title><rect x="992.0" y="69" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="995.01" y="79.5" ></text>
</g>
<g >
<title>slices.partialInsertionSortCmpFunc[go.shape (864 samples, 0.05%)</title><rect x="1006.1" y="69" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1009.07" y="79.5" ></text>
</g>
<g >
<title>abi.(*Kind) (192 samples, 0.01%)</title><rect x="151.6" y="53" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="154.60" y="63.5" ></text>
</g>
<g >
<title>runtime.modinfo (864 samples, 0.05%)</title><rect x="986.7" y="69" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="989.73" y="79.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (656 samples, 0.04%)</title><rect x="980.2" y="69" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="983.18" y="79.5" ></text>
</g>
<g >
<title>reflectlite (304 samples, 0.02%)</title><rect x="172.8" y="53" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="175.84" y="63.5" ></text>
</g>
<g >
<title>godebug (2,720 samples, 0.15%)</title><rect x="163.6" y="53" width="1.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="166.58" y="63.5" ></text>
</g>
<g >
<title>runtime.tracebackothers (304 samples, 0.02%)</title><rect x="1001.3" y="69" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1004.26" y="79.5" ></text>
</g>
<g >
<title>strconv (35,313 samples, 1.91%)</title><rect x="1013.1" y="69" width="22.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1016.07" y="79.5" >s..</text>
</g>
<g >
<title>atomic.Pointer[internal (192 samples, 0.01%)</title><rect x="1086.4" y="53" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1089.43" y="63.5" ></text>
</g>
<g >
<title>debug (416 samples, 0.02%)</title><rect x="1002.6" y="53" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1005.56" y="63.5" ></text>
</g>
<g >
<title> Value reflect (992 samples, 0.05%)</title><rect x="1009.9" y="53" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1012.95" y="63.5" ></text>
</g>
<g >
<title>fs (192 samples, 0.01%)</title><rect x="1082.9" y="53" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1085.87" y="63.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan (320 samples, 0.02%)</title><rect x="957.3" y="69" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="960.26" y="79.5" ></text>
</g>
<g >
<title>fmt (3,600 samples, 0.19%)</title><rect x="18.7" y="69" width="2.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="21.75" y="79.5" ></text>
</g>
<g >
<title>sync.(*Pool).pinSlow (160 samples, 0.01%)</title><rect x="1042.3" y="69" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1045.29" y="79.5" ></text>
</g>
<g >
<title>runtime.call1024 (224 samples, 0.01%)</title><rect x="971.0" y="69" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="974.00" y="79.5" ></text>
</g>
<g >
<title>time (23,416 samples, 1.27%)</title><rect x="1054.9" y="69" width="14.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1057.86" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mspan) (4,832 samples, 0.26%)</title><rect x="928.7" y="69" width="3.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="931.66" y="79.5" ></text>
</g>
<g >
<title>cpu (640 samples, 0.03%)</title><rect x="1080.6" y="53" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1083.60" y="63.5" ></text>
</g>
<g >
<title>sync (1,528 samples, 0.08%)</title><rect x="1044.1" y="37" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1047.12" y="47.5" ></text>
</g>
<g >
<title>runtime.(*traceStringTable) (912 samples, 0.05%)</title><rect x="965.7" y="69" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="968.69" y="79.5" ></text>
</g>
<g >
<title>unicode (2,128 samples, 0.12%)</title><rect x="1188.6" y="69" width="1.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1191.64" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap) (10,656 samples, 0.58%)</title><rect x="921.5" y="69" width="6.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="924.45" y="79.5" ></text>
</g>
<g >
<title>runtime.initMetrics (3,392 samples, 0.18%)</title><rect x="983.5" y="69" width="2.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="986.49" y="79.5" ></text>
</g>
<g >
<title>runtime.(*traceBuf) (176 samples, 0.01%)</title><rect x="964.4" y="69" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="967.39" y="79.5" ></text>
</g>
<g >
<title>sync (1,912 samples, 0.10%)</title><rect x="1043.9" y="69" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1046.87" y="79.5" ></text>
</g>
<g >
<title>runtime.call1048576 (288 samples, 0.02%)</title><rect x="971.1" y="69" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="974.15" y="79.5" ></text>
</g>
<g >
<title>reflect.(*structType) (448 samples, 0.02%)</title><rect x="221.6" y="69" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="224.56" y="79.5" ></text>
</g>
<g >
<title>runtime.call2097152 (288 samples, 0.02%)</title><rect x="972.7" y="69" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="975.71" y="79.5" ></text>
</g>
<g >
<title>runtime.call131072 (288 samples, 0.02%)</title><rect x="971.7" y="69" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="974.68" y="79.5" ></text>
</g>
<g >
<title>fs.(*FileMode) (368 samples, 0.02%)</title><rect x="189.8" y="53" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="192.82" y="63.5" ></text>
</g>
<g >
<title>runtime.traceWriter (2,224 samples, 0.12%)</title><rect x="999.3" y="69" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1002.29" y="79.5" ></text>
</g>
<g >
<title>atomic..dict.Pointer[internal (1,528 samples, 0.08%)</title><rect x="1044.1" y="53" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1047.12" y="63.5" ></text>
</g>
<g >
<title>internal (59,730 samples, 3.23%)</title><rect x="150.9" y="69" width="38.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="153.90" y="79.5" >int..</text>
</g>
<g >
<title>flag.isZeroValue (352 samples, 0.02%)</title><rect x="18.5" y="69" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="21.46" y="79.5" ></text>
</g>
<g >
<title>flag (1,616 samples, 0.09%)</title><rect x="12.6" y="69" width="1.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="15.58" y="79.5" ></text>
</g>
<g >
<title>runtime.(*stkframe) (2,320 samples, 0.13%)</title><rect x="953.2" y="69" width="1.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="956.18" y="79.5" ></text>
</g>
<g >
<title>reflect (14,640 samples, 0.79%)</title><rect x="207.8" y="69" width="9.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="210.76" y="79.5" ></text>
</g>
<g >
<title>type:.eq.reflect (624 samples, 0.03%)</title><rect x="1083.7" y="69" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1086.73" y="79.5" ></text>
</g>
<g >
<title>runtime.(*atomicHeadTailIndex) (208 samples, 0.01%)</title><rect x="906.8" y="69" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="909.78" y="79.5" ></text>
</g>
<g >
<title>runtime.(*moduledata) (448 samples, 0.02%)</title><rect x="928.4" y="69" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="931.37" y="79.5" ></text>
</g>
<g >
<title>runtime.injectglist (304 samples, 0.02%)</title><rect x="985.7" y="69" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="988.65" y="79.5" ></text>
</g>
<g >
<title>errors (1,088 samples, 0.06%)</title><rect x="11.8" y="69" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="14.83" y="79.5" ></text>
</g>
<g >
<title>runtime.call16 (224 samples, 0.01%)</title><rect x="972.1" y="69" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="975.07" y="79.5" ></text>
</g>
<g >
<title>runtime.badmorestackg0 (240 samples, 0.01%)</title><rect x="969.8" y="69" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="972.83" y="79.5" ></text>
</g>
<g >
<title>runtime.(*godebugInc) (288 samples, 0.02%)</title><rect x="915.5" y="69" width="0.2" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="918.47" y="79.5" ></text>
</g>
<g >
<title>sync.(*HashTrieMap[go.shape.interface {},go.shape.interface {}]) (3,280 samples, 0.18%)</title><rect x="182.7" y="53" width="2.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="185.67" y="63.5" ></text>
</g>
<g >
<title>sync.(*Once).doSlow (176 samples, 0.01%)</title><rect x="1041.1" y="69" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1044.15" y="79.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue) (1,056 samples, 0.06%)</title><rect x="1043.1" y="69" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1046.12" y="79.5" ></text>
</g>
<g >
<title>runtime.call128 (224 samples, 0.01%)</title><rect x="971.5" y="69" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="974.54" y="79.5" ></text>
</g>
<g >
<title>runtime.schedtrace (416 samples, 0.02%)</title><rect x="991.0" y="69" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="994.01" y="79.5" ></text>
</g>
<g >
<title>sync.(*poolChain) (816 samples, 0.04%)</title><rect x="1042.6" y="69" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1045.60" y="79.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats) (464 samples, 0.03%)</title><rect x="907.2" y="69" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="910.21" y="79.5" ></text>
</g>
<g >
<title>fmt.(*pp) (24,512 samples, 1.33%)</title><rect x="26.7" y="69" width="15.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="29.67" y="79.5" ></text>
</g>
<g >
<title>runtime.(*limiterEvent) (784 samples, 0.04%)</title><rect x="916.2" y="69" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="919.21" y="79.5" ></text>
</g>
<g >
<title>runtime.traceAdvance.func1 (240 samples, 0.01%)</title><rect x="994.2" y="69" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="997.17" y="79.5" ></text>
</g>
<g >
<title>runtime.traceWriter.refill (224 samples, 0.01%)</title><rect x="1000.8" y="69" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1003.78" y="79.5" ></text>
</g>
<g >
<title>go:func (126,456 samples, 6.84%)</title><rect x="42.9" y="69" width="80.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="45.93" y="79.5" >go:func</text>
</g>
<g >
<title>runtime.(*timers) (4,560 samples, 0.25%)</title><rect x="961.4" y="69" width="2.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="964.41" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mcentral) (1,776 samples, 0.10%)</title><rect x="920.3" y="69" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="923.32" y="79.5" ></text>
</g>
<g >
<title>cpu (160 samples, 0.01%)</title><rect x="1081.7" y="53" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1084.66" y="63.5" ></text>
</g>
<g >
<title>bytealg.IndexRabinKarp[go.shape (592 samples, 0.03%)</title><rect x="157.6" y="53" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="160.59" y="63.5" ></text>
</g>
<g >
<title>runtime.debugCallCheck (1,104 samples, 0.06%)</title><rect x="976.4" y="69" width="0.7" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="979.35" y="79.5" ></text>
</g>
<g >
<title>runtime.preprintpanics (224 samples, 0.01%)</title><rect x="988.1" y="69" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="991.09" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc) (10,816 samples, 0.58%)</title><rect x="932.7" y="69" width="6.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="935.70" y="79.5" ></text>
</g>
<g >
<title>slices.choosePivotCmpFunc[go.shape (464 samples, 0.03%)</title><rect x="1004.4" y="69" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1007.38" y="79.5" ></text>
</g>
<g >
<title>time.(*Location) (1,104 samples, 0.06%)</title><rect x="1069.8" y="69" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1072.81" y="79.5" ></text>
</g>
<g >
<title>type:.eq.flag (224 samples, 0.01%)</title><rect x="1081.0" y="69" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1084.01" y="79.5" ></text>
</g>
<g >
<title>runtime.call16777216 (304 samples, 0.02%)</title><rect x="972.4" y="69" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="975.37" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageCache) (880 samples, 0.05%)</title><rect x="940.6" y="69" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="943.56" y="79.5" ></text>
</g>
<g >
<title>filepathlite (224 samples, 0.01%)</title><rect x="160.4" y="53" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="163.42" y="63.5" ></text>
</g>
<g >
<title>poll.dupCloseOnExecOld (160 samples, 0.01%)</title><rect x="172.7" y="53" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="175.73" y="63.5" ></text>
</g>
<g >
<title>runtime.(*unwinder) (3,088 samples, 0.17%)</title><rect x="966.6" y="69" width="2.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="969.59" y="79.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (592 samples, 0.03%)</title><rect x="980.9" y="69" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="983.85" y="79.5" ></text>
</g>
<g >
<title>flag.(*FlagSet) (4,752 samples, 0.26%)</title><rect x="13.6" y="69" width="3.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="16.62" y="79.5" ></text>
</g>
<g >
<title>fmt.(*fmt) (8,816 samples, 0.48%)</title><rect x="21.0" y="69" width="5.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="24.04" y="79.5" ></text>
</g>
<g >
<title>runtime.call512 (224 samples, 0.01%)</title><rect x="974.3" y="69" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="977.29" y="79.5" ></text>
</g>
<g >
<title>runtime.call536870912 (320 samples, 0.02%)</title><rect x="974.6" y="69" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="977.62" y="79.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (176 samples, 0.01%)</title><rect x="968.9" y="69" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="971.90" y="79.5" ></text>
</g>
<g >
<title>os.(*file) (400 samples, 0.02%)</title><rect x="207.3" y="69" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="210.31" y="79.5" ></text>
</g>
<g >
<title>slices.insertionSortOrdered[go.shape (208 samples, 0.01%)</title><rect x="1005.4" y="69" width="0.1" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1008.41" y="79.5" ></text>
</g>
<g >
<title>slices..dict (1,224 samples, 0.07%)</title><rect x="1002.8" y="69" width="0.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1005.83" y="79.5" ></text>
</g>
<g >
<title>maps.(*Iter) (2,432 samples, 0.13%)</title><rect x="175.2" y="37" width="1.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="178.24" y="47.5" ></text>
</g>
<g >
<title>slices.partitionEqualCmpFunc[go.shape (560 samples, 0.03%)</title><rect x="1007.6" y="69" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1010.60" y="79.5" ></text>
</g>
<g >
<title>bisect.(*Matcher) (672 samples, 0.04%)</title><rect x="156.4" y="53" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="159.41" y="63.5" ></text>
</g>
<g >
<title>log.(*Logger).Output (176 samples, 0.01%)</title><rect x="196.4" y="69" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="199.37" y="79.5" ></text>
</g>
<g >
<title>runtime.call256 (224 samples, 0.01%)</title><rect x="972.9" y="69" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="975.89" y="79.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc) (608 samples, 0.03%)</title><rect x="908.6" y="69" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="911.63" y="79.5" ></text>
</g>
<g >
<title>godebug.(*Setting).Value (240 samples, 0.01%)</title><rect x="165.9" y="53" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="168.88" y="63.5" ></text>
</g>
<g >
<title>fs.FileMode (544 samples, 0.03%)</title><rect x="190.2" y="53" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="193.16" y="63.5" ></text>
</g>
<g >
<title>runtime.wirep (240 samples, 0.01%)</title><rect x="1002.3" y="69" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1005.34" y="79.5" ></text>
</g>
<g >
<title>slices.medianCmpFunc[go.shape (464 samples, 0.03%)</title><rect x="1005.5" y="69" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1008.54" y="79.5" ></text>
</g>
<g >
<title>runtime.call16384 (256 samples, 0.01%)</title><rect x="972.2" y="69" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="975.21" y="79.5" ></text>
</g>
<g >
<title>runtime (320 samples, 0.02%)</title><rect x="1082.2" y="53" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1085.19" y="63.5" ></text>
</g>
<g >
<title>runtime.call33554432 (320 samples, 0.02%)</title><rect x="973.8" y="69" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="976.75" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcWork) (1,568 samples, 0.08%)</title><rect x="914.5" y="69" width="1.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="917.47" y="79.5" ></text>
</g>
<g >
<title>reflect.(*ValueError) (288 samples, 0.02%)</title><rect x="218.1" y="69" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="221.06" y="79.5" ></text>
</g>
<g >
<title>reflectlite.rtype (576 samples, 0.03%)</title><rect x="173.4" y="53" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="176.43" y="63.5" ></text>
</g>
<g >
<title>poll (2,860 samples, 0.15%)</title><rect x="166.9" y="53" width="1.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="169.86" y="63.5" ></text>
</g>
<g >
<title>bytealg (424 samples, 0.02%)</title><rect x="157.2" y="53" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="160.22" y="63.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init (480 samples, 0.03%)</title><rect x="949.3" y="69" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="952.30" y="79.5" ></text>
</g>
<g >
<title>runtime.traceAdvance (1,808 samples, 0.10%)</title><rect x="992.9" y="69" width="1.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="995.95" y="79.5" ></text>
</g>
<g >
<title>fs (960 samples, 0.05%)</title><rect x="189.2" y="53" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="192.20" y="63.5" ></text>
</g>
<g >
<title>godebug.update (384 samples, 0.02%)</title><rect x="166.2" y="53" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="169.16" y="63.5" ></text>
</g>
<g >
<title>bufio (544 samples, 0.03%)</title><rect x="10.1" y="69" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.10" y="79.5" ></text>
</g>
<g >
<title>runtime.(*lockRank) (224 samples, 0.01%)</title><rect x="916.9" y="69" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="919.91" y="79.5" ></text>
</g>
<g >
<title>runtime.(*traceTypeTable) (288 samples, 0.02%)</title><rect x="966.4" y="69" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="969.40" y="79.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked) (3,888 samples, 0.21%)</title><rect x="954.7" y="69" width="2.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="957.66" y="79.5" ></text>
</g>
<g >
<title>reflect.ChanDir (192 samples, 0.01%)</title><rect x="221.8" y="69" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="224.85" y="79.5" ></text>
</g>
<g >
<title>os.(*File) (4,048 samples, 0.22%)</title><rect x="204.6" y="69" width="2.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="207.64" y="79.5" ></text>
</g>
<g >
<title>reflect.(*MapIter) (592 samples, 0.03%)</title><rect x="217.3" y="69" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="220.32" y="79.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (576 samples, 0.03%)</title><rect x="989.4" y="69" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="992.40" y="79.5" ></text>
</g>
<g >
<title>runtime.gfget (160 samples, 0.01%)</title><rect x="982.7" y="69" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="985.72" y="79.5" ></text>
</g>
<g >
<title>sync.(*HashTrieMap[go.shape.interface {},go.shape.interface {}]).LoadOrStore (160 samples, 0.01%)</title><rect x="184.8" y="53" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="187.77" y="63.5" ></text>
</g>
<g >
<title>strings (4,864 samples, 0.26%)</title><rect x="1036.4" y="69" width="3.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1039.38" y="79.5" ></text>
</g>
<g >
<title>time.(*Time) (256 samples, 0.01%)</title><rect x="1070.5" y="69" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1073.52" y="79.5" ></text>
</g>
<g >
<title>reflectlite.(*rtype) (624 samples, 0.03%)</title><rect x="173.0" y="53" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="176.03" y="63.5" ></text>
</g>
<g >
<title>all (1,849,770 samples, 100%)</title><rect x="10.0" y="85" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>runtime.call4096 (240 samples, 0.01%)</title><rect x="974.0" y="69" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="976.95" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState) (6,608 samples, 0.36%)</title><rect x="910.3" y="69" width="4.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="913.25" y="79.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex) (2,832 samples, 0.15%)</title><rect x="946.3" y="69" width="1.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="949.33" y="79.5" ></text>
</g>
<g >
<title>runtime.rtype (896 samples, 0.05%)</title><rect x="990.4" y="69" width="0.6" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="993.41" y="79.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (672 samples, 0.04%)</title><rect x="978.2" y="69" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="981.19" y="79.5" ></text>
</g>
<g >
<title>reflect.Value (5,328 samples, 0.29%)</title><rect x="222.1" y="69" width="3.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="225.07" y="79.5" ></text>
</g>
<g >
<title>maps (240 samples, 0.01%)</title><rect x="1082.2" y="37" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1085.23" y="47.5" ></text>
</g>
<g >
<title>sync.(*Once) (352 samples, 0.02%)</title><rect x="1040.9" y="69" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1043.92" y="79.5" ></text>
</g>
<g >
<title>runtime.typePointers (912 samples, 0.05%)</title><rect x="1001.5" y="69" width="0.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1004.45" y="79.5" ></text>
</g>
<g >
<title>slices.choosePivotOrdered[go.shape (432 samples, 0.02%)</title><rect x="1004.7" y="69" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1007.67" y="79.5" ></text>
</g>
<g >
<title>flag.init (656 samples, 0.04%)</title><rect x="18.0" y="69" width="0.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="21.04" y="79.5" ></text>
</g>
<g >
<title>log.(*Logger).output (320 samples, 0.02%)</title><rect x="196.6" y="69" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="199.58" y="79.5" ></text>
</g>
<g >
<title>fmtsort (4,544 samples, 0.25%)</title><rect x="160.6" y="53" width="2.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="163.56" y="63.5" ></text>
</g>
<g >
<title>fmtsort (160 samples, 0.01%)</title><rect x="1003.9" y="53" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1006.90" y="63.5" ></text>
</g>
<g >
<title>strconv.(*NumError) (368 samples, 0.02%)</title><rect x="1035.6" y="69" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1038.60" y="79.5" ></text>
</g>
<g >
<title>bisect.(*dedup) (576 samples, 0.03%)</title><rect x="156.8" y="53" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="159.84" y="63.5" ></text>
</g>
<g >
<title>log.(*Logger) (1,600 samples, 0.09%)</title><rect x="195.3" y="69" width="1.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="198.35" y="79.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (528 samples, 0.03%)</title><rect x="979.8" y="69" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="982.84" y="79.5" ></text>
</g>
<g >
<title>runtime.(*waitReason) (176 samples, 0.01%)</title><rect x="968.6" y="69" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="971.56" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (304 samples, 0.02%)</title><rect x="939.6" y="69" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="942.60" y="79.5" ></text>
</g>
<g >
<title>runtime.(*cpuStats) (320 samples, 0.02%)</title><rect x="908.2" y="69" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="911.24" y="79.5" ></text>
</g>
<g >
<title>os (9,170 samples, 0.50%)</title><rect x="198.8" y="69" width="5.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="201.77" y="79.5" ></text>
</g>
<g >
<title>reflect.Kind (160 samples, 0.01%)</title><rect x="222.0" y="69" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="224.97" y="79.5" ></text>
</g>
<g >
<title>fs.(*PathError) (160 samples, 0.01%)</title><rect x="190.1" y="53" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="193.06" y="63.5" ></text>
</g>
<g >
<title>slices.symMergeCmpFunc[go.shape.struct { Key reflect.Value (1,696 samples, 0.09%)</title><rect x="1012.0" y="69" width="1.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1014.99" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pinner) (272 samples, 0.01%)</title><rect x="942.5" y="69" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="945.50" y="79.5" ></text>
</g>
<g >
<title>runtime.call524288 (288 samples, 0.02%)</title><rect x="974.4" y="69" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="977.43" y="79.5" ></text>
</g>
<g >
<title>runtime.boundsError (1,328 samples, 0.07%)</title><rect x="970.1" y="69" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="973.14" y="79.5" ></text>
</g>
<g >
<title>sync (576 samples, 0.03%)</title><rect x="182.3" y="53" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="185.31" y="63.5" ></text>
</g>
<g >
<title>runtime.(*p).destroy (224 samples, 0.01%)</title><rect x="932.5" y="69" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="935.48" y="79.5" ></text>
</g>
<g >
<title>runtime.call1073741824 (320 samples, 0.02%)</title><rect x="971.3" y="69" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="974.33" y="79.5" ></text>
</g>
<g >
<title>runtime.(*bucket) (336 samples, 0.02%)</title><rect x="907.0" y="69" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="910.00" y="79.5" ></text>
</g>
<g >
<title>runtime.gcStart (416 samples, 0.02%)</title><rect x="981.4" y="69" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="984.40" y="79.5" ></text>
</g>
<g >
<title>runtime.(*inlineUnwinder) (208 samples, 0.01%)</title><rect x="915.7" y="69" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="918.65" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pallocData) (848 samples, 0.05%)</title><rect x="941.8" y="69" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="944.80" y="79.5" ></text>
</g>
<g >
<title>runtime.gcenable (192 samples, 0.01%)</title><rect x="982.5" y="69" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="985.50" y="79.5" ></text>
</g>
<g >
<title>poll.(*FD) (3,984 samples, 0.22%)</title><rect x="168.7" y="53" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="171.70" y="63.5" ></text>
</g>
<g >
<title>bisect (6,144 samples, 0.33%)</title><rect x="152.5" y="53" width="3.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="155.50" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mcache) (2,560 samples, 0.14%)</title><rect x="918.7" y="69" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="921.69" y="79.5" ></text>
</g>
<g >
<title>type:.eq.strconv (192 samples, 0.01%)</title><rect x="1085.8" y="69" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1088.83" y="79.5" ></text>
</g>
<g >
<title>runtime.(*rwmutex) (480 samples, 0.03%)</title><rect x="945.6" y="69" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="948.61" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).captureStack (224 samples, 0.01%)</title><rect x="918.2" y="69" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="921.18" y="79.5" ></text>
</g>
<g >
<title>runtime.gcbits (976 samples, 0.05%)</title><rect x="981.9" y="69" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="984.88" y="79.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot) (2,688 samples, 0.15%)</title><rect x="949.6" y="69" width="1.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="952.60" y="79.5" ></text>
</g>
<g >
<title>atomic (160 samples, 0.01%)</title><rect x="1086.3" y="53" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1089.31" y="63.5" ></text>
</g>
<g >
<title>itoa (512 samples, 0.03%)</title><rect x="166.4" y="53" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="169.43" y="63.5" ></text>
</g>
<g >
<title>runtime.casgstatus (288 samples, 0.02%)</title><rect x="975.8" y="69" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="978.81" y="79.5" ></text>
</g>
<g >
<title>abi.(*Type) (336 samples, 0.02%)</title><rect x="151.8" y="53" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="154.75" y="63.5" ></text>
</g>
<g >
<title>maps.(*table) (2,288 samples, 0.12%)</title><rect x="179.9" y="37" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="182.95" y="47.5" ></text>
</g>
<g >
<title>fs (184 samples, 0.01%)</title><rect x="124.9" y="53" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="127.89" y="63.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker) (224 samples, 0.01%)</title><rect x="957.5" y="69" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="960.46" y="79.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram) (752 samples, 0.04%)</title><rect x="958.5" y="69" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="961.45" y="79.5" ></text>
</g>
<g >
<title>reflect.(*Value) (576 samples, 0.03%)</title><rect x="217.7" y="69" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="220.69" y="79.5" ></text>
</g>
<g >
<title>runtime.(*spanSetBlockAlloc) (208 samples, 0.01%)</title><rect x="952.5" y="69" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="955.46" y="79.5" ></text>
</g>
<g >
<title>slices.rotateCmpFunc[go.shape.struct { Key reflect.Value (992 samples, 0.05%)</title><rect x="1009.9" y="69" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1012.95" y="79.5" ></text>
</g>
<g >
<title>type:.eq.log (208 samples, 0.01%)</title><rect x="1083.0" y="69" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1085.99" y="79.5" ></text>
</g>
<g >
<title>fmt..typeAssert (160 samples, 0.01%)</title><rect x="42.7" y="69" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="45.70" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageBits) (1,088 samples, 0.06%)</title><rect x="939.9" y="69" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="942.86" y="79.5" ></text>
</g>
<g >
<title>runtime.(*TypeAssertionError) (704 samples, 0.04%)</title><rect x="903.5" y="69" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="906.53" y="79.5" ></text>
</g>
<g >
<title>cpu (2,489 samples, 0.13%)</title><rect x="158.8" y="53" width="1.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="161.83" y="63.5" ></text>
</g>
<g >
<title>runtime.(*p) (1,056 samples, 0.06%)</title><rect x="931.8" y="69" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="934.81" y="79.5" ></text>
</g>
<g >
<title>slices.stableCmpFunc[go.shape.struct { Key reflect.Value (1,424 samples, 0.08%)</title><rect x="1011.1" y="69" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1014.08" y="79.5" ></text>
</g>
<g >
<title>testlog.PanicOnExit0 (160 samples, 0.01%)</title><rect x="188.9" y="53" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="191.90" y="63.5" ></text>
</g>
<g >
<title>syscall.(*Errno) (592 samples, 0.03%)</title><rect x="1053.6" y="69" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1056.60" y="79.5" ></text>
</g>
<g >
<title>syscall.Errno (608 samples, 0.03%)</title><rect x="1054.0" y="69" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1056.98" y="79.5" ></text>
</g>
<g >
<title>runtime.call268435456 (320 samples, 0.02%)</title><rect x="973.2" y="69" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="976.22" y="79.5" ></text>
</g>
<g >
<title>type:.eq.[2]runtime (384 samples, 0.02%)</title><rect x="1080.4" y="69" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1083.35" y="79.5" ></text>
</g>
<g >
<title>reflect.flag (176 samples, 0.01%)</title><rect x="225.5" y="69" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="228.52" y="79.5" ></text>
</g>
<g >
<title>runtime.call8388608 (288 samples, 0.02%)</title><rect x="975.5" y="69" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="978.52" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits) (1,072 samples, 0.06%)</title><rect x="941.1" y="69" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="944.12" y="79.5" ></text>
</g>
<g >
<title>abi.Name (688 samples, 0.04%)</title><rect x="152.1" y="53" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="155.06" y="63.5" ></text>
</g>
<g >
<title>go:itab.*reflect.rtype,reflect (328 samples, 0.02%)</title><rect x="125.5" y="69" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="128.51" y="79.5" ></text>
</g>
<g >
<title>runtime.(*_panic) (1,584 samples, 0.09%)</title><rect x="904.0" y="69" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="906.98" y="79.5" ></text>
</g>
<g >
<title>type:.eq.io (192 samples, 0.01%)</title><rect x="1082.9" y="69" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1085.87" y="79.5" ></text>
</g>
<g >
<title>type:.eq.time (208 samples, 0.01%)</title><rect x="1086.6" y="69" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1089.59" y="79.5" ></text>
</g>
<g >
<title>log (7,416 samples, 0.40%)</title><rect x="190.6" y="69" width="4.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="193.60" y="79.5" ></text>
</g>
<g >
<title>godebug (384 samples, 0.02%)</title><rect x="1081.8" y="53" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1084.76" y="63.5" ></text>
</g>
<g >
<title>runtime.call65536 (288 samples, 0.02%)</title><rect x="975.0" y="69" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="977.97" y="79.5" ></text>
</g>
<g >
<title>time.absDays (464 samples, 0.03%)</title><rect x="1079.8" y="69" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1082.78" y="79.5" ></text>
</g>
<g >
<title>runtime (416 samples, 0.02%)</title><rect x="1002.6" y="69" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1005.56" y="79.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (176 samples, 0.01%)</title><rect x="957.1" y="69" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="960.14" y="79.5" ></text>
</g>
<g >
<title>sync.(*HashTrieMap[go.shape.interface {},go.shape.interface {}]).initSlow (160 samples, 0.01%)</title><rect x="184.9" y="53" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="187.87" y="63.5" ></text>
</g>
<g >
<title>runtime.(*_panic).nextFrame (336 samples, 0.02%)</title><rect x="905.0" y="69" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="907.99" y="79.5" ></text>
</g>
<g >
<title>runtime.(*traceStackTable) (336 samples, 0.02%)</title><rect x="965.5" y="69" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="968.47" y="79.5" ></text>
</g>
<g >
<title>syscall (13,304 samples, 0.72%)</title><rect x="1045.1" y="69" width="8.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1048.09" y="79.5" ></text>
</g>
<g >
<title>runtime.call4194304 (288 samples, 0.02%)</title><rect x="974.1" y="69" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="977.11" y="79.5" ></text>
</g>
<g >
<title>runtime.(*synctestGroup) (864 samples, 0.05%)</title><rect x="957.6" y="69" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="960.60" y="79.5" ></text>
</g>
<g >
<title>runtime.freeSomeWbufs (176 samples, 0.01%)</title><rect x="979.5" y="69" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="982.48" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile) (1,168 samples, 0.06%)</title><rect x="917.4" y="69" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="920.43" y="79.5" ></text>
</g>
<g >
<title>runtime.traceback1 (320 samples, 0.02%)</title><rect x="1000.9" y="69" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1003.92" y="79.5" ></text>
</g>
<g >
<title>main.main.Println (384 samples, 0.02%)</title><rect x="198.2" y="69" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="201.24" y="79.5" ></text>
</g>
<g >
<title>slices.siftDownCmpFunc[go.shape (480 samples, 0.03%)</title><rect x="1010.6" y="69" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1013.58" y="79.5" ></text>
</g>
<g >
<title>runtime.setPinned (176 samples, 0.01%)</title><rect x="991.3" y="69" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="994.32" y="79.5" ></text>
</g>
<g >
<title>runtime.fatalpanic (272 samples, 0.01%)</title><rect x="979.1" y="69" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="982.08" y="79.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (160 samples, 0.01%)</title><rect x="979.7" y="69" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="982.68" y="79.5" ></text>
</g>
<g >
<title>typerel (157,528 samples, 8.52%)</title><rect x="1086.7" y="69" width="100.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1089.72" y="79.5" >typerel</text>
</g>
<g >
<title>runtime.asyncPreempt (320 samples, 0.02%)</title><rect x="969.6" y="69" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="972.58" y="79.5" ></text>
</g>
<g >
<title>sync..dict (4,224 samples, 0.23%)</title><rect x="185.7" y="53" width="2.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="188.69" y="63.5" ></text>
</g>
<g >
<title>runtime.call67108864 (320 samples, 0.02%)</title><rect x="975.1" y="69" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="978.15" y="79.5" ></text>
</g>
<g >
<title>godebug.(*Setting) (880 samples, 0.05%)</title><rect x="165.3" y="53" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="168.32" y="63.5" ></text>
</g>
<g >
<title>runtime.(*Func) (160 samples, 0.01%)</title><rect x="902.9" y="69" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="905.89" y="79.5" ></text>
</g>
<g >
<title>runtime.callers (176 samples, 0.01%)</title><rect x="975.7" y="69" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="978.70" y="79.5" ></text>
</g>
<g >
<title>runtime.(*timer) (3,744 samples, 0.20%)</title><rect x="958.9" y="69" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="961.93" y="79.5" ></text>
</g>
<g >
<title>runtime.traceLocker (7,072 samples, 0.38%)</title><rect x="994.6" y="69" width="4.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="997.62" y="79.5" ></text>
</g>
<g >
<title>exithook (596 samples, 0.03%)</title><rect x="173.9" y="37" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="176.94" y="47.5" ></text>
</g>
<g >
<title>time.(*dataIO) (448 samples, 0.02%)</title><rect x="1070.7" y="69" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1073.68" y="79.5" ></text>
</g>
<g >
<title>runtime.(*piController) (240 samples, 0.01%)</title><rect x="942.3" y="69" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="945.34" y="79.5" ></text>
</g>
<g >
<title>runtime.call262144 (288 samples, 0.02%)</title><rect x="973.0" y="69" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="976.04" y="79.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState) (1,824 samples, 0.10%)</title><rect x="948.1" y="69" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="951.13" y="79.5" ></text>
</g>
<g >
<title>reflect.(*rtype) (1,920 samples, 0.10%)</title><rect x="220.3" y="69" width="1.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="223.34" y="79.5" ></text>
</g>
<g >
<title>runtime.debugCallWrap (688 samples, 0.04%)</title><rect x="977.1" y="69" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="980.09" y="79.5" ></text>
</g>
<g >
<title>runtime.(*traceMap) (768 samples, 0.04%)</title><rect x="964.5" y="69" width="0.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="967.50" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState) (1,936 samples, 0.10%)</title><rect x="909.0" y="69" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="912.02" y="79.5" ></text>
</g>
<g >
<title>slices.breakPatternsCmpFunc[go.shape (304 samples, 0.02%)</title><rect x="1004.0" y="69" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1007.02" y="79.5" ></text>
</g>
<g >
<title>runtime.call2048 (224 samples, 0.01%)</title><rect x="972.6" y="69" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="975.57" y="79.5" ></text>
</g>
<g >
<title>time.Time (13,680 samples, 0.74%)</title><rect x="1071.1" y="69" width="8.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1074.06" y="79.5" ></text>
</g>
<g >
<title>syscall.Getenv (160 samples, 0.01%)</title><rect x="1054.4" y="69" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1057.36" y="79.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (160 samples, 0.01%)</title><rect x="978.8" y="69" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="981.79" y="79.5" ></text>
</g>
<g >
<title>runtime (12,005 samples, 0.65%)</title><rect x="173.8" y="53" width="7.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="176.80" y="63.5" ></text>
</g>
<g >
<title>runtime.call32768 (288 samples, 0.02%)</title><rect x="973.6" y="69" width="0.2" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="976.57" y="79.5" ></text>
</g>
<g >
<title> Value reflect (1,424 samples, 0.08%)</title><rect x="1011.1" y="53" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1014.08" y="63.5" ></text>
</g>
<g >
<title>unicode (2,224 samples, 0.12%)</title><rect x="1187.2" y="69" width="1.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1190.21" y="79.5" ></text>
</g>
<g >
<title>slices..dict.swapRangeCmpFunc[internal (160 samples, 0.01%)</title><rect x="1003.9" y="69" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1006.90" y="79.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (224 samples, 0.01%)</title><rect x="969.4" y="69" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="972.39" y="79.5" ></text>
</g>
<g >
<title>runtime.markroot (304 samples, 0.02%)</title><rect x="986.3" y="69" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="989.34" y="79.5" ></text>
</g>
<g >
<title>runtime.(*cpuProfile) (1,152 samples, 0.06%)</title><rect x="907.5" y="69" width="0.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="910.51" y="79.5" ></text>
</g>
<g >
<title>runtime.(*activeSweep) (448 samples, 0.02%)</title><rect x="905.2" y="69" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="908.20" y="79.5" ></text>
</g>
<g >
<title>go:string (38,872 samples, 2.10%)</title><rect x="126.1" y="69" width="24.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="129.11" y="79.5" >g..</text>
</g>
<g >
<title>maps.(*Map) (4,944 samples, 0.27%)</title><rect x="176.8" y="37" width="3.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="179.79" y="47.5" ></text>
</g>
<g >
<title>slices.pdqsortCmpFunc[go.shape (1,248 samples, 0.07%)</title><rect x="1008.6" y="69" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1011.60" y="79.5" ></text>
</g>
<g >
<title>type:.eq.[9]internal (640 samples, 0.03%)</title><rect x="1080.6" y="69" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1083.60" y="79.5" ></text>
</g>
<g >
<title>runtime.checkdead (288 samples, 0.02%)</title><rect x="976.1" y="69" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="979.13" y="79.5" ></text>
</g>
<g >
<title>runtime.reflectcall (672 samples, 0.04%)</title><rect x="989.8" y="69" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="992.76" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pollDesc) (320 samples, 0.02%)</title><rect x="943.0" y="69" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="946.05" y="79.5" ></text>
</g>
<g >
<title>sync (368 samples, 0.02%)</title><rect x="1082.4" y="53" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1085.40" y="63.5" ></text>
</g>
<g >
<title>sync.(*RWMutex) (320 samples, 0.02%)</title><rect x="1042.4" y="69" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1045.39" y="79.5" ></text>
</g>
<g >
<title>atomic (192 samples, 0.01%)</title><rect x="173.8" y="37" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="176.80" y="47.5" ></text>
</g>
<g >
<title>abi (224 samples, 0.01%)</title><rect x="1081.4" y="53" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1084.44" y="63.5" ></text>
</g>
<g >
<title>runtime.(*pollCache) (480 samples, 0.03%)</title><rect x="942.7" y="69" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="945.74" y="79.5" ></text>
</g>
<g >
<title>log.init.0.func1 (176 samples, 0.01%)</title><rect x="197.0" y="69" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="199.98" y="79.5" ></text>
</g>
<g >
<title>runtime.rt0_go (272 samples, 0.01%)</title><rect x="990.2" y="69" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="993.23" y="79.5" ></text>
</g>
<g >
<title>runtime.call8192 (256 samples, 0.01%)</title><rect x="975.4" y="69" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="978.35" y="79.5" ></text>
</g>
<g >
<title>type:.eq.fmt (448 samples, 0.02%)</title><rect x="1081.2" y="69" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1084.15" y="79.5" ></text>
</g>
<g >
<title>runtime.godebugDefault (352 samples, 0.02%)</title><rect x="982.8" y="69" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="985.82" y="79.5" ></text>
</g>
<g >
<title>poll.(*pollDesc) (912 samples, 0.05%)</title><rect x="172.1" y="53" width="0.6" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="175.15" y="63.5" ></text>
</g>
<g >
<title>fs (792 samples, 0.04%)</title><rect x="125.0" y="53" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="128.00" y="63.5" ></text>
</g>
<g >
<title>runtime.systemstack (176 samples, 0.01%)</title><rect x="992.7" y="69" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="995.71" y="79.5" ></text>
</g>
<g >
<title>syscall.init (272 samples, 0.01%)</title><rect x="1054.5" y="69" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1057.47" y="79.5" ></text>
</g>
<g >
<title>runtime.(*Pinner) (736 samples, 0.04%)</title><rect x="903.0" y="69" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="906.00" y="79.5" ></text>
</g>
<g >
<title>runtime.call64 (224 samples, 0.01%)</title><rect x="974.8" y="69" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="977.82" y="79.5" ></text>
</g>
<g >
<title>runtime.addrRange (208 samples, 0.01%)</title><rect x="969.0" y="69" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="972.02" y="79.5" ></text>
</g>
<g >
<title>runtime.traceThreadDestroy (240 samples, 0.01%)</title><rect x="999.1" y="69" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1002.13" y="79.5" ></text>
</g>
<g >
<title>go:funcrel (1,328 samples, 0.07%)</title><rect x="123.6" y="69" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="126.60" y="79.5" ></text>
</g>
<g >
<title>chacha8rand (752 samples, 0.04%)</title><rect x="158.0" y="53" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="161.00" y="63.5" ></text>
</g>
<g >
<title>type:.eq.os (960 samples, 0.05%)</title><rect x="1083.1" y="69" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1086.12" y="79.5" ></text>
</g>
<g >
<title>slices.heapSortOrdered[go.shape (320 samples, 0.02%)</title><rect x="1005.2" y="69" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1008.20" y="79.5" ></text>
</g>
<g >
<title>type:.eq.internal (2,240 samples, 0.12%)</title><rect x="1081.4" y="69" width="1.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1084.44" y="79.5" ></text>
</g>
<g >
<title> Value reflect (1,696 samples, 0.09%)</title><rect x="1012.0" y="53" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1014.99" y="63.5" ></text>
</g>
<g >
<title>utf8 (2,128 samples, 0.12%)</title><rect x="1188.6" y="53" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.64" y="63.5" ></text>
</g>
<g >
<title>runtime.gcMarkRootCheck (288 samples, 0.02%)</title><rect x="980.7" y="69" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="983.67" y="79.5" ></text>
</g>
<g >
<title>testlog (680 samples, 0.04%)</title><rect x="188.5" y="53" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="191.47" y="63.5" ></text>
</g>
<g >
<title>chacha8rand.(*State) (560 samples, 0.03%)</title><rect x="158.5" y="53" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="161.48" y="63.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType) (336 samples, 0.02%)</title><rect x="915.8" y="69" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="918.79" y="79.5" ></text>
</g>
<g >
<title>strings.(*Builder) (848 samples, 0.05%)</title><rect x="1039.5" y="69" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1042.49" y="79.5" ></text>
</g>
<g >
<title>log.init (176 samples, 0.01%)</title><rect x="196.8" y="69" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="199.79" y="79.5" ></text>
</g>
<g >
<title>slices.breakPatternsOrdered[go.shape (256 samples, 0.01%)</title><rect x="1004.2" y="69" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1007.21" y="79.5" ></text>
</g>
<g >
<title>slices.medianOrdered[go.shape (368 samples, 0.02%)</title><rect x="1005.8" y="69" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1008.84" y="79.5" ></text>
</g>
<g >
<title>bufio.(*Scanner) (2,144 samples, 0.12%)</title><rect x="10.4" y="69" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.44" y="79.5" ></text>
</g>
<g >
<title>oserror (160 samples, 0.01%)</title><rect x="166.8" y="53" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="169.76" y="63.5" ></text>
</g>
<g >
<title>runtime (1,059,469 samples, 57.28%)</title><rect x="225.8" y="69" width="675.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="228.78" y="79.5" >runtime</text>
</g>
<g >
<title>flag.(*FlagSet).PrintDefaults (1,952 samples, 0.11%)</title><rect x="16.7" y="69" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="19.65" y="79.5" ></text>
</g>
<g >
<title>runtime.init (624 samples, 0.03%)</title><rect x="983.1" y="69" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="986.08" y="79.5" ></text>
</g>
<g >
<title>runtime.bitCursor (192 samples, 0.01%)</title><rect x="970.0" y="69" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="973.01" y="79.5" ></text>
</g>
<g >
<title>slices.partialInsertionSortOrdered[go.shape (464 samples, 0.03%)</title><rect x="1006.6" y="69" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1009.62" y="79.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (512 samples, 0.03%)</title><rect x="42.3" y="69" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="45.30" y="79.5" ></text>
</g>
<g >
<title>runtime.(*sigctxt) (400 samples, 0.02%)</title><rect x="951.3" y="69" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="954.32" y="79.5" ></text>
</g>
<g >
<title>runtime.(*lfstack) (320 samples, 0.02%)</title><rect x="916.0" y="69" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="919.00" y="79.5" ></text>
</g>
<g >
<title>runtime.(*rwmutex).rlock (176 samples, 0.01%)</title><rect x="945.9" y="69" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="948.92" y="79.5" ></text>
</g>
<g >
<title>sync.indirect[go.shape.interface {},go.shape (176 samples, 0.01%)</title><rect x="1082.8" y="53" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1085.75" y="63.5" ></text>
</g>
<g >
<title>godebugs (224 samples, 0.01%)</title><rect x="1082.0" y="53" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1085.01" y="63.5" ></text>
</g>
<g >
<title>runtime.debugCallWrap1 (720 samples, 0.04%)</title><rect x="977.5" y="69" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="980.53" y="79.5" ></text>
</g>
<g >
<title>main (1,656 samples, 0.09%)</title><rect x="197.1" y="69" width="1.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="200.10" y="79.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState) (928 samples, 0.05%)</title><rect x="952.6" y="69" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="955.59" y="79.5" ></text>
</g>
<g >
<title>runtime.(*spanSet) (1,392 samples, 0.08%)</title><rect x="951.6" y="69" width="0.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="954.57" y="79.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat) (192 samples, 0.01%)</title><rect x="958.2" y="69" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="961.24" y="79.5" ></text>
</g>
<g >
<title>runtime.(*wakeableSleep) (272 samples, 0.01%)</title><rect x="968.7" y="69" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="971.67" y="79.5" ></text>
</g>
<g >
<title>fmtsort.Sort (176 samples, 0.01%)</title><rect x="163.5" y="53" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="166.46" y="63.5" ></text>
</g>
<g >
<title>sync.entry[go.shape.interface {},go.shape (192 samples, 0.01%)</title><rect x="1082.6" y="53" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1085.63" y="63.5" ></text>
</g>
<g >
<title>slices.pdqsortOrdered[go.shape (864 samples, 0.05%)</title><rect x="1009.4" y="69" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1012.40" y="79.5" ></text>
</g>
<g >
<title>go:itab.*os.fileStat,io (184 samples, 0.01%)</title><rect x="124.9" y="69" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="127.89" y="79.5" ></text>
</g>
<g >
<title>slices.partitionOrdered[go.shape (640 samples, 0.03%)</title><rect x="1008.2" y="69" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1011.19" y="79.5" ></text>
</g>
<g >
<title>reflect.(*abiSeq) (3,232 samples, 0.17%)</title><rect x="218.2" y="69" width="2.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="221.24" y="79.5" ></text>
</g>
<g >
<title>type:.eq.runtime (2,592 samples, 0.14%)</title><rect x="1084.1" y="69" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1087.13" y="79.5" ></text>
</g>
<g >
<title>type:.eq.sync (960 samples, 0.05%)</title><rect x="1086.0" y="69" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1088.98" y="79.5" ></text>
</g>
<g >
<title>slices.siftDownOrdered[go.shape (304 samples, 0.02%)</title><rect x="1010.9" y="69" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1013.89" y="79.5" ></text>
</g>
<g >
<title>runtime.call32 (224 samples, 0.01%)</title><rect x="973.4" y="69" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="976.42" y="79.5" ></text>
</g>
<g >
<title>main.map.init (448 samples, 0.02%)</title><rect x="198.5" y="69" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="201.48" y="79.5" ></text>
</g>
<g >
<title>sync.(*Mutex) (1,136 samples, 0.06%)</title><rect x="185.0" y="53" width="0.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="187.97" y="63.5" ></text>
</g>
<g >
<title>maps (1,312 samples, 0.07%)</title><rect x="174.4" y="37" width="0.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="177.40" y="47.5" ></text>
</g>
<g >
<title>slices.heapSortCmpFunc[go.shape (400 samples, 0.02%)</title><rect x="1004.9" y="69" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1007.95" y="79.5" ></text>
</g>
<g >
<title>runtime.(*traceRegionAlloc) (752 samples, 0.04%)</title><rect x="965.0" y="69" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="967.99" y="79.5" ></text>
</g>
<g >
<title>slices.partitionCmpFunc[go.shape (1,072 samples, 0.06%)</title><rect x="1006.9" y="69" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1009.92" y="79.5" ></text>
</g>
<g >
<title>runtime.(*linearAlloc) (320 samples, 0.02%)</title><rect x="916.7" y="69" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="919.71" y="79.5" ></text>
</g>
<g >
<title>stringslite (1,328 samples, 0.07%)</title><rect x="181.5" y="53" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="184.46" y="63.5" ></text>
</g>
<g >
<title>slices.partitionEqualOrdered[go.shape (368 samples, 0.02%)</title><rect x="1008.0" y="69" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1010.96" y="79.5" ></text>
</g>
<g >
<title>sync.(*Pool) (1,616 samples, 0.09%)</title><rect x="1041.3" y="69" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1044.26" y="79.5" ></text>
</g>
<g >
<title>log.(*Logger).SetOutput (160 samples, 0.01%)</title><rect x="196.5" y="69" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="199.48" y="79.5" ></text>
</g>
<g >
<title>strconv.(*decimal) (864 samples, 0.05%)</title><rect x="1035.8" y="69" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1038.83" y="79.5" ></text>
</g>
<g >
<title>runtime.(*lockTimer) (592 samples, 0.03%)</title><rect x="917.1" y="69" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="920.05" y="79.5" ></text>
</g>
<g >
<title>io (2,048 samples, 0.11%)</title><rect x="189.2" y="69" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="192.20" y="79.5" ></text>
</g>
<g >
<title>runtime.(*scavChunkData) (464 samples, 0.03%)</title><rect x="946.0" y="69" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="949.03" y="79.5" ></text>
</g>
<g >
<title>poll.(*fdMutex) (912 samples, 0.05%)</title><rect x="171.6" y="53" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="174.56" y="63.5" ></text>
</g>
<g >
<title>abi (1,040 samples, 0.06%)</title><rect x="150.9" y="53" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="153.90" y="63.5" ></text>
</g>
</g>
</svg>
